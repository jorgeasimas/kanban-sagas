{"version":3,"sources":["firebase.utils.js","Redux/redux-sagas.js","ListItem.js","Drop-component.js","Kanban.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","analytics","rootSaga","watchFetchList","fetchListAsync","messagesRef","collection","doc","requestListSuccess","data","type","payload","Initial_State","elements","loaded","error","all","call","console","log","takeEvery","put","get","then","sagaMiddleware","createSagaMiddleware","store","createStore","state","action","applyMiddleware","run","Button","styled","button","DragItem","div","connect","elementsRedux","dispatch","fetchList","item","index","prefix","handleClick","a","copyList","listCopy","newList","filter","id","nestList","set","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","onClick","content","ColumnHeader","props","DroppableStyles","DropArea","droppableId","droppableProps","map","placeholder","ListGrid","removeFromList","list","result","splice","addToList","element","useState","task","setTask","setId","useEffect","e","preventDefault","previous","newId","toString","newItem","newTodo","push","alert","onDragEnd","destination","sourceList","source","removedElement","newSourceList","destinationList","className","name","onChange","target","value","label","required","Object","keys","key","App","Kanban","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.c0cc445e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/analytics\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyBjtl5dVm-h0Uah1Kwt65--WnZJJRNlamo\",\r\n  authDomain: \"my-chat-a7b6d.firebaseapp.com\",\r\n  projectId: \"my-chat-a7b6d\",\r\n  storageBucket: \"my-chat-a7b6d.appspot.com\",\r\n  messagingSenderId: \"1074409928589\",\r\n  appId: \"1:1074409928589:web:a9e5e3b5728e8377feefc4\",\r\n  measurementId: \"G-NW4RYNZQ6E\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const firestore = firebase.firestore();\r\nexport const analytics = firebase.analytics();\r\n/*\r\n  export const auth = firebase.auth();\r\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n  googleProvider.setCustomParameters({ prompt: 'select_account' });\r\n  export const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n*/\r\nexport default firebase;","import { takeEvery, put, all, call } from \"redux-saga/effects\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { firestore } from \".././firebase.utils\";\r\n\r\nconst messagesRef = firestore.collection(\"kanban\").doc(\"document\");\r\n\r\nconst requestList = () => {\r\n  return { type: \"REQUESTED_List\" };\r\n};\r\n\r\nconst requestListSuccess = (data) => {\r\n  return { type: \"REQUESTED_List_SUCCEEDED\", payload: data };\r\n};\r\n\r\nconst requestListError = () => {\r\n  return { type: \"REQUESTED_List_FAILED\" };\r\n};\r\n\r\nexport const fetchList = () => {\r\n  return { type: \"FETCHED_List\" };\r\n};\r\n\r\nexport const updateList = (item) => {\r\n  return { type: \"UPDATE_List\" };\r\n};\r\n\r\n//Reducer\r\nconst Initial_State = {\r\n  elements: {},\r\n  loaded: false,\r\n  error: 10\r\n};\r\n\r\nconst reducer = (state = Initial_State, action) => {\r\n  switch (action.type) {\r\n    case \"REQUESTED_List\":\r\n      console.log(\"initial\");\r\n      return {\r\n        ...state,\r\n        elements: {},\r\n        loaded: false,\r\n        error: 15\r\n      };\r\n    case \"REQUESTED_List_SUCCEEDED\":\r\n      console.log(\"succeeded\");\r\n      return {\r\n        ...state,\r\n        elements: action.payload,\r\n        loaded: true,\r\n        error: 20\r\n      };\r\n    case \"REQUESTED_List_FAILED\":\r\n      return {\r\n        ...state,\r\n        elements: {},\r\n        loaded: false,\r\n        error: 25\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction* rootSaga() {\r\n  yield all([call(watchFetchList)]);\r\n}\r\n\r\nexport function* watchFetchList() {\r\n  console.log(\"saga\");\r\n  yield takeEvery(\"FETCHED_List\", fetchListAsync);\r\n}\r\n\r\nexport function* fetchListAsync() {\r\n  try {\r\n    yield put(requestList());\r\n    const data = yield call(() => {\r\n      return messagesRef.get().then((doc) => doc.data());\r\n    });\r\n    /*     \r\n      fetch(\r\n        \"https://jsonplaceholder.typicode.com/users\"\r\n      ).then((responde) => responde.json());\r\n    });*/\r\n    console.log(data);\r\n    yield put(requestListSuccess(data));\r\n  } catch (error) {\r\n    yield put(requestListError());\r\n  }\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import { Draggable } from \"react-beautiful-dnd\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n//import { addItems, updateItems } from \"./Redux/Item-reducer\";\r\nimport { firestore } from \"./firebase.utils\";\r\nimport { fetchList } from \"./Redux/redux-sagas\";\r\n\r\nconst Button = styled.button`\r\n  min-width: 2px;\r\n  width: 20px;\r\n  height: auto;\r\n  letter-spacing: 0.5px;\r\n  line-height: 15px;\r\n  padding: 0 3px 0 3px;\r\n  font-size: 10px;\r\n  background-color: gray;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-family: \"Open Sans Condensed\";\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DragItem = styled.div`\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  background: white;\r\n  margin: 0 0 8px 0;\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ListItem = ({ item, index, prefix, elementsRedux, fetchList }) => {\r\n    const messagesRef = firestore.collection(\"kanban\").doc(\"document\");\r\n  \r\n        const handleClick = async () => {\r\n        \r\n            const copyList = { ...elementsRedux.listCopy };\r\n            const newList = copyList[prefix].filter(\r\n                (newList) => newList.id !== item.id);\r\n            copyList[prefix] = newList;\r\n            const nestList = {\"listCopy\": copyList}\r\n            console.log(nestList)\r\n            await messagesRef.set(nestList);\r\n            const fetchData = fetchList;\r\n            fetchData();\r\n        };\r\n  return (\r\n    <Draggable draggableId={item.id} index={index}>\r\n      {(provided, snapshot) => {\r\n        return (\r\n          <DragItem\r\n            ref={provided.innerRef}\r\n            snapshot={snapshot}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <Button onClick={handleClick}>X</Button>\r\n\r\n            {item.content}\r\n          </DragItem>\r\n        );\r\n      }}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  elementsRedux: state.elements\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchList: () => dispatch(fetchList())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);\r\n\r\n\r\n//export default ListItem;\r\n","import { Droppable } from \"react-beautiful-dnd\";\r\nimport React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ColumnHeader = styled.div`\r\n  border-radius: 6px;\r\n  color: white;\r\n  height: auto;\r\n  margin-bottom: 20px;\r\n  text-transform: uppercase;\r\n  padding: 15px;\r\n  background: ${(props) =>\r\n    props.prefix === \"backLog\" ? \"palevioletred\" : \"green\"};\r\n`;\r\n\r\nconst DroppableStyles = styled.div`\r\n  padding: 10px;\r\n  border-radius: 6px;\r\n  background: #d4d4d4;\r\n  box-shadow: 8px 4px gray;\r\n`;\r\n\r\nconst DropArea = ({ prefix, elements }) => (\r\n  <DroppableStyles>\r\n    <ColumnHeader prefix={prefix}>{prefix}</ColumnHeader>\r\n    <Droppable droppableId={`${prefix}`}>\r\n      {(provided) => (\r\n        <div {...provided.droppableProps} ref={provided.innerRef}>\r\n          {elements.map((item, index) => (\r\n            <ListItem key={item.id} item={item} index={index} prefix={prefix} />\r\n          ))}\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  </DroppableStyles>\r\n);\r\n\r\nexport default DropArea;","import DropArea from \"./Drop-component\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\n//import { addItems, updateItems } from \"./Redux/Item-reducer\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport \"./input.css\";\r\nimport { firestore } from \"./firebase.utils\";\r\nimport { fetchList } from \"./Redux/redux-sagas\";\r\n\r\nconst ListGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 15px;\r\n  width: 70vw;\r\n  opacity: 0.85;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  min-width: 2px;\r\n  width: 150px;\r\n  height: 35px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 15px;\r\n  padding: 3px 3px 3px 3px;\r\n  font-size: 12px;\r\n  background-color: gray;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-family: \"Open Sans Condensed\";\r\n  cursor: pointer;\r\n`;\r\n\r\nconst removeFromList = (list, index) => {\r\n  const result = [...list];\r\n  const [removed] = result.splice(index, 1);\r\n  return [removed, result];\r\n};\r\n\r\nconst addToList = (list, index, element) => {\r\n  const result = [...list];\r\n  result.splice(index, 0, element);\r\n  return result;\r\n};\r\n\r\n/* not in use anymore as Object.keys will do the same as \r\ncreating const to be the key to loop inside elementsRedux(data) to return arrays: backLog, \r\ninProgress and done\r\nconst head = [\"backLog\", \"onGoing\", \"done\"];*/\r\n\r\nfunction KanbanList({ fetchList, elements, loaded, error }) {\r\n  const [task, setTask] = useState(\"\");\r\n  const [id, setId] = useState(1);\r\n  const messagesRef = firestore.collection(\"kanban\").doc(\"document\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = fetchList;\r\n    fetchData();\r\n}, []);\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    const fetchData = fetchList;\r\n    fetchData();\r\n        if (task !== \"\") {\r\n        const listCopy = { ...elements.listCopy };\r\n        setId((previous) => previous + 1);\r\n        const newId = id.toString();\r\n        const newItem = { id: newId, content: task };\r\n        const newTodo = listCopy[\"backLog\"];\r\n        newTodo.push(newItem);\r\n        listCopy[\"backLog\"] = newTodo;\r\n        await messagesRef.set({listCopy});//saves and updates firestore document\r\n        } \r\n        else {alert(\"please fill out field\");}\r\n    setTask(\"\");\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const fetchData = fetchList;\r\n    fetchData();\r\n    if (!result.destination) {return;}\r\n    const listCopy = { ...elements.listCopy };\r\n    //it will save the list of element is coming from\r\n    const sourceList = listCopy[result.source.droppableId];\r\n    //removedFromList returns [removed as item, result as Array]\r\n    const [removedElement, newSourceList] = removeFromList(\r\n      sourceList,\r\n      result.source.index\r\n    );\r\n    //will receive result Array from removeFromList method\r\n    listCopy[result.source.droppableId] = newSourceList;\r\n //   setElementsRedux(listCopy)\r\n    const destinationList = listCopy[result.destination.droppableId];\r\n    listCopy[result.destination.droppableId] = addToList(\r\n      destinationList,\r\n      result.destination.index,\r\n      removedElement\r\n    );\r\n    //      updateRedux(listCopy);\r\n    await messagesRef.set({listCopy});//saves and updates firestore document\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"sign-in\">\r\n        <form>\r\n          <div className=\"group\">\r\n            <input\r\n              className=\"form-input\"\r\n              name=\"task\"\r\n              type=\"task\"\r\n              onChange={(e) => setTask(e.target.value)}\r\n              value={task}\r\n              label=\"task\"\r\n              placeholder=\"type new task here\"\r\n              required\r\n            />\r\n            <Button onClick={handleClick}>ADD New Task</Button>\r\n          </div>\r\n        </form>\r\n        <br></br>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {loaded ? (\r\n            <ListGrid>\r\n             {Object.keys(elements.listCopy).map((key) => (\r\n                <DropArea\r\n                  elements={elements.listCopy[key]} //elements[\"todo\"], elements[\"inProgress\"]...\r\n                  key={key} //[\"todo\"] then [\"inProgress\"]...\r\n                  prefix={key}\r\n                />))}\r\n            </ListGrid>) \r\n            : (<h1>Loadind...</h1>)\r\n          }\r\n        )\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  elements: state.elements,\r\n  loaded: state.loaded,\r\n  error: state.error\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchList: () => dispatch(fetchList())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanList);","import \"./styles.css\";\nimport React from \"react\";\nimport KanbanList from \"./Kanban\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <KanbanList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/redux-sagas\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  rootElement\n);"],"sourceRoot":""}